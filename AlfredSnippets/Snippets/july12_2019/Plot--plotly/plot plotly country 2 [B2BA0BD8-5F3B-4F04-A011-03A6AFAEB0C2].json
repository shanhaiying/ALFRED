{
  "alfredsnippet" : {
    "snippet" : "def country_plot(df1,country,count,title='Counts'):\n    \"\"\"\n    Example:\n    df1 = df['Year'].groupby(df['Birth Country']).count().reset_index()\n                    .sort_values('Year', ascending = False)\n                    \n                    \n    # Example2:\n    note: production_countries = ['USA','Japan'], [], ['Brazil'] etc\n          i.e. the column has list instead of direct country names.\n    import itertools\n    df1 = (pd.Series(list(itertools.chain.from_iterable(movie['production_countries'])))\n             .value_counts()\n             .reset_index()\n             .rename(columns={'index':'country', 0:'num_movies'})\n            )\n    \n    Note: \n    plotly== 2.7.0\n    cufflinks == 0.14.0\n    \"\"\"\n    import plotly.graph_objs as go\n    from plotly.offline import init_notebook_mode,iplot\n    init_notebook_mode(connected=True)\n\n    data = dict(type='choropleth',\n                locations = df1[country],\n                locationmode = 'country names', z = df1[count],\n                text = df1[country], colorbar = {'title':title},\n                colorscale=[[0, 'rgb(224,255,255)'],\n                  [0.01, 'rgb(166,206,227)'], [0.02, 'rgb(31,120,180)'],\n                  [0.03, 'rgb(178,223,138)'], [0.05, 'rgb(51,160,44)'],\n                  [0.10, 'rgb(251,154,153)'], [0.20, 'rgb(255,255,0)'],\n                  [1, 'rgb(227,26,28)']],    \n                reversescale = False)\n    layout = dict(title=title,\n                  geo = dict(showframe = True, projection={'type':'Mercator'}))\n    choromap = go.Figure(data = [data], layout = layout)\n    return iplot(choromap, validate=False)",
    "uid" : "B2BA0BD8-5F3B-4F04-A011-03A6AFAEB0C2",
    "name" : "plot plotly country 2",
    "keyword" : "country_plot2"
  }
}