{
  "alfredsnippet" : {
    "snippet" : "# https:\/\/stackoverflow.com\/questions\/21925114\/is-there-an-implementation-of-missingmaps-in-pythons-ecosystem\nfrom matplotlib import collections as collections\nfrom matplotlib.patches import Rectangle\nfrom itertools import cycle\n\ndef missmap(df, ax=None, colors=None, aspect=4, sort='descending',\n            title=None, **kwargs):\n    \"\"\"\n    Plot the missing values of df.\n\n    Parameters\n    ----------\n    df : pandas DataFrame\n    ax : matplotlib axes\n        if None then a new figure and axes will be created\n    colors : dict\n        dict with {True: c1, False: c2} where the values are\n        matplotlib colors.\n    aspect : int\n        the width to height ratio for each rectangle.\n    sort : one of {'descending', 'ascending', None}\n    title : str\n    kwargs : dict\n        matplotlib.axes.bar kwargs\n\n    Returns\n    -------\n    ax : matplotlib axes\n\n    \"\"\"\n\n    if ax is None:\n        (fig, ax) = plt.subplots()\n\n    # setup the axes\n\n    dfn = pd.isnull(df)\n\n    if sort in ('ascending', 'descending'):\n        counts = dfn.sum()\n        sort_dict = {'ascending': True, 'descending': False}\n        counts = counts.sort_values(ascending=sort_dict[sort])\n        dfn = dfn[counts.index]\n\n    # Up to here\n\n    ny = len(df)\n    nx = len(df.columns)\n\n    # each column is a stacked bar made up of ny patches.\n\n    xgrid = np.tile(np.arange(nx), (ny, 1)).T\n    ygrid = np.tile(np.arange(ny), (nx, 1))\n\n    # xys is the lower left corner of each patch\n\n    xys = (zip(x, y) for (x, y) in zip(xgrid, ygrid))\n\n    if colors is None:\n        colors = {True: '#EAF205', False: 'k'}\n\n    widths = cycle([aspect])\n    heights = cycle([1])\n\n    for (xy, width, height, col) in zip(xys, widths, heights,\n            dfn.columns):\n        color_array = dfn[col].map(colors)\n\n        rects = [Rectangle(xyc, width, height, **kwargs) for (xyc,\n                 c) in zip(xy, color_array)]\n\n        p_coll = collections.PatchCollection(rects, color=color_array,\n                edgecolor=color_array, **kwargs)\n        ax.add_collection(p_coll, autolim=False)\n\n    # post plot aesthetics\n\n    ax.set_xlim(0, nx)\n    ax.set_ylim(0, ny)\n\n    ax.set_xticks(.5 + np.arange(nx))  # center the ticks\n    ax.set_xticklabels(dfn.columns)\n    \n    for t in ax.get_xticklabels():\n        t.set_rotation(90)\n\n    # remove tick lines\n\n    ax.tick_params(axis='both', which='both', bottom='off', left='off',\n                   labelleft='off')\n    ax.grid(False)\n\n    if title:\n        ax.set_title(title)\n    return ax\n\n\ncolours = {True: \"#fde725\", False: \"#440154\"}\nax = missmap(df, colors = colours)\nplt.show(ax)",
    "uid" : "3877920A-7C5B-402B-B09F-BBADD74D3146",
    "name" : "missing number colored",
    "keyword" : "missing_number_colored"
  }
}